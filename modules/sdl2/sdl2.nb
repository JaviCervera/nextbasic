'$Link "sdl2_binds"
$Link "sdl2"

Const SDL_QUERY = -1
Const SDL_IGNORE = 0
Const SDL_ENABLE = 1
Const KMOD_NONE = $0000
Const KMOD_LSHIFT = $0001
Const KMOD_RSHIFT = $0002
Const KMOD_LCTRL = $0040
Const KMOD_RCTRL = $0080
Const KMOD_LALT = $0100
Const KMOD_RALT = $0200
Const KMOD_LGUI = $0400
Const KMOD_RGUI = $0800
Const KMOD_NUM = $1000
Const KMOD_CAPS = $2000
Const KMOD_MODE = $4000
Const KMOD_RESERVED = $8000
Const KMOD_CTRL = $00C0
Const KMOD_SHIFT = $0003
Const KMOD_ALT = $0300
Const KMOD_GUI = $0C00
Const SDL_CONTROLLER_AXIS_INVALID = -1
Const SDL_CONTROLLER_AXIS_LEFTX = 0
Const SDL_CONTROLLER_AXIS_LEFTY = 1
Const SDL_CONTROLLER_AXIS_RIGHTX = 2
Const SDL_CONTROLLER_AXIS_RIGHTY = 3
Const SDL_CONTROLLER_AXIS_TRIGGERLEFT = 4
Const SDL_CONTROLLER_AXIS_TRIGGERRIGHT = 5
Const SDL_CONTROLLER_AXIS_MAX = 6
Const SDL_CONTROLLER_BUTTON_INVALID = -1
Const SDL_CONTROLLER_BUTTON_A = 0
Const SDL_CONTROLLER_BUTTON_B = 1
Const SDL_CONTROLLER_BUTTON_X = 2
Const SDL_CONTROLLER_BUTTON_Y = 3
Const SDL_CONTROLLER_BUTTON_BACK = 4
Const SDL_CONTROLLER_BUTTON_GUIDE = 5
Const SDL_CONTROLLER_BUTTON_START = 6
Const SDL_CONTROLLER_BUTTON_LEFTSTICK = 7
Const SDL_CONTROLLER_BUTTON_RIGHTSTICK = 8
Const SDL_CONTROLLER_BUTTON_LEFTSHOULDER = 9
Const SDL_CONTROLLER_BUTTON_RIGHTSHOULDER = 10
Const SDL_CONTROLLER_BUTTON_DPAD_UP = 11
Const SDL_CONTROLLER_BUTTON_DPAD_DOWN = 12
Const SDL_CONTROLLER_BUTTON_DPAD_LEFT = 13
Const SDL_CONTROLLER_BUTTON_DPAD_RIGHT = 14
Const SDL_CONTROLLER_BUTTON_MAX = 15
Const SDL_ADDEVENT = 0
Const SDL_PEEKEVENT = 1
Const SDL_GETEVENT = 2
Const SDL_FIRSTEVENT = 0
Const SDL_QUIT_ = $100
Const SDL_APP_TERMINATING = $101
Const SDL_APP_LOWMEMORY = $102
Const SDL_APP_WILLENTERBACKGROUND = $103
Const SDL_APP_DIDENTERBACKGROUND = $104
Const SDL_APP_WILLENTERFOREGROUND = $105
Const SDL_APP_DIDENTERFOREGROUND = $106
Const SDL_WINDOWEVENT = $200
Const SDL_SYSWMEVENT = $201
Const SDL_KEYDOWN = $300
Const SDL_KEYUP = $301
Const SDL_TEXTEDITING = $302
Const SDL_TEXTINPUT = $303
Const SDL_MOUSEMOTION = $400
Const SDL_MOUSEBUTTONDOWN = $401
Const SDL_MOUSEBUTTONUP = $402
Const SDL_MOUSEWHEEL = $403
Const SDL_HAT_CENTERED = $00
Const SDL_HAT_UP = $01
Const SDL_HAT_RIGHT = $02
Const SDL_HAT_DOWN = $04
Const SDL_HAT_LEFT = $08
Const SDL_HAT_RIGHTUP = $03
Const SDL_HAT_RIGHTDOWN = $06
Const SDL_HAT_LEFTUP = $09
Const SDL_HAT_LEFTDOWN = $0C
Const SDL_JOYAXISMOTION = $600
Const SDL_JOYBALLMOTION = $601
Const SDL_JOYHATMOTION = $602
Const SDL_JOYBUTTONDOWN = $603
Const SDL_JOYBUTTONUP = $604
Const SDL_JOYDEVICEADDED = $605
Const SDL_JOYDEVICEREMOVED = $606
Const SDL_CONTROLLERAXISMOTION = $650
Const SDL_CONTROLLERBUTTONDOWN = $651
Const SDL_CONTROLLERBUTTONUP = $652
Const SDL_CONTROLLERDEVICEADDED = $653
Const SDL_CONTROLLERDEVICEREMOVED = $654
Const SDL_CONTROLLERDEVICEREMAPPED = $655
Const SDL_FINGERDOWN = $700
Const SDL_FINGERUP = $701
Const SDL_FINGERMOTION = $702
Const SDL_DOLLARGESTURE = $800
Const SDL_DOLLARRECORD = $801
Const SDL_MULTIGESTURE = $802
Const SDL_CLIPBOARDUPDATE = $900
Const SDL_DROPFILE = $1000
Const SDL_RENDER_TARGETS_RESET = $2000
Const SDL_USEREVENT = $8000
Const SDL_LASTEVENT = $FFFF
Const SDL_BLENDMODE_NONE = $00000000
Const SDL_BLENDMODE_BLEND = $00000001
Const SDL_BLENDMODE_ADD = $00000002
Const SDL_BLENDMODE_MOD = $00000004
Const SDL_FLIP_NONE = $00000000
Const SDL_FLIP_HORIZONTAL = $00000001
Const SDL_FLIP_VERTICAL = $00000002
Const SDL_GL_RED_SIZE = 0
Const SDL_GL_GREEN_SIZE = 1
Const SDL_GL_BLUE_SIZE = 2
Const SDL_GL_ALPHA_SIZE = 3
Const SDL_GL_BUFFER_SIZE = 4
Const SDL_GL_DOUBLEBUFFER = 5
Const SDL_GL_DEPTH_SIZE = 6
Const SDL_GL_STENCIL_SIZE = 7
Const SDL_GL_ACCUM_RED_SIZE = 8
Const SDL_GL_ACCUM_GREEN_SIZE = 9
Const SDL_GL_ACCUM_BLUE_SIZE = 10
Const SDL_GL_ACCUM_ALPHA_SIZE = 11
Const SDL_GL_STEREO = 12
Const SDL_GL_MULTISAMPLEBUFFERS = 13
Const SDL_GL_MULTISAMPLESAMPLES = 14
Const SDL_GL_ACCELERATED_VISUAL = 15
Const SDL_GL_RETAINED_BACKING = 16
Const SDL_GL_CONTEXT_MAJOR_VERSION = 17
Const SDL_GL_CONTEXT_MINOR_VERSION = 18
Const SDL_GL_CONTEXT_EGL = 19
Const SDL_GL_CONTEXT_FLAGS = 19
Const SDL_GL_CONTEXT_PROFILE_MASK = 20
Const SDL_GL_SHARE_WITH_CURRENT_CONTEXT = 21
Const SDL_GL_FRAMEBUFFER_SRGB_CAPABLE = 22
Const SDL_INIT_TIMER = $00000001
Const SDL_INIT_AUDIO = $00000010
Const SDL_INIT_VIDEO = $00000020
Const SDL_INIT_JOYSTICK = $00000200
Const SDL_INIT_HAPTIC = $00001000
Const SDL_INIT_GAMECONTROLLER = $00002000
Const SDL_INIT_EVENTS = $00004000
Const SDL_INIT_NOPARACHUTE = $00100000
Const SDL_INIT_EVERYTHING = $00007231
Const SDL_LOG_CATEGORY_APPLICATION = 0
Const SDL_LOG_CATEGORY_ERROR = 1
Const SDL_LOG_CATEGORY_ASSERT = 2
Const SDL_LOG_CATEGORY_SYSTEM = 3
Const SDL_LOG_CATEGORY_AUDIO = 4
Const SDL_LOG_CATEGORY_VIDEO = 5
Const SDL_LOG_CATEGORY_RENDER = 6
Const SDL_LOG_CATEGORY_INPUT = 7
Const SDL_LOG_CATEGORY_TEST = 8
Const SDL_LOG_CATEGORY_CUSTOM = 19
Const SDL_LOG_PRIORITY_VERBOSE = 1
Const SDL_LOG_PRIORITY_DEBUG = 2
Const SDL_LOG_PRIORITY_INFO = 3
Const SDL_LOG_PRIORITY_WARN = 4
Const SDL_LOG_PRIORITY_ERROR = 5
Const SDL_LOG_PRIORITY_CRITICAL = 6
Const SDL_NUM_LOG_PRIORITIES = 7
Const SDL_MESSAGEBOX_ERROR = $00000010
Const SDL_MESSAGEBOX_WARNING = $00000020
Const SDL_MESSAGEBOX_INFORMATION = $00000040
Const SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = $00000001
Const SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = $00000002
Const SDL_POWERSTATE_UNKNOWN = 0
Const SDL_POWERSTATE_ON_BATTERY = 1
Const SDL_POWERSTATE_NO_BATTERY = 2
Const SDL_POWERSTATE_CHARGING = 3
Const SDL_POWERSTATE_CHARGED = 4
Const SDL_SCANCODE_UNKNOWN = 0
Const SDL_SCANCODE_A = 4
Const SDL_SCANCODE_B = 5
Const SDL_SCANCODE_C = 6
Const SDL_SCANCODE_D = 7
Const SDL_SCANCODE_E = 8
Const SDL_SCANCODE_F = 9
Const SDL_SCANCODE_G = 10
Const SDL_SCANCODE_H = 11
Const SDL_SCANCODE_I = 12
Const SDL_SCANCODE_J = 13
Const SDL_SCANCODE_K = 14
Const SDL_SCANCODE_L = 15
Const SDL_SCANCODE_M = 16
Const SDL_SCANCODE_N = 17
Const SDL_SCANCODE_O = 18
Const SDL_SCANCODE_P = 19
Const SDL_SCANCODE_Q = 20
Const SDL_SCANCODE_R = 21
Const SDL_SCANCODE_S = 22
Const SDL_SCANCODE_T = 23
Const SDL_SCANCODE_U = 24
Const SDL_SCANCODE_V = 25
Const SDL_SCANCODE_W = 26
Const SDL_SCANCODE_X = 27
Const SDL_SCANCODE_Y = 28
Const SDL_SCANCODE_Z = 29
Const SDL_SCANCODE_1 = 30
Const SDL_SCANCODE_2 = 31
Const SDL_SCANCODE_3 = 32
Const SDL_SCANCODE_4 = 33
Const SDL_SCANCODE_5 = 34
Const SDL_SCANCODE_6 = 35
Const SDL_SCANCODE_7 = 36
Const SDL_SCANCODE_8 = 37
Const SDL_SCANCODE_9 = 38
Const SDL_SCANCODE_0 = 39
Const SDL_SCANCODE_RETURN = 40
Const SDL_SCANCODE_ESCAPE = 41
Const SDL_SCANCODE_BACKSPACE = 42
Const SDL_SCANCODE_TAB = 43
Const SDL_SCANCODE_SPACE = 44
Const SDL_SCANCODE_MINUS = 45
Const SDL_SCANCODE_EQUALS = 46
Const SDL_SCANCODE_LEFTBRACKET = 47
Const SDL_SCANCODE_RIGHTBRACKET = 48
Const SDL_SCANCODE_BACKSLASH = 49
Const SDL_SCANCODE_NONUSHASH = 50
Const SDL_SCANCODE_SEMICOLON = 51
Const SDL_SCANCODE_APOSTROPHE = 52
Const SDL_SCANCODE_GRAVE = 53
Const SDL_SCANCODE_COMMA = 54
Const SDL_SCANCODE_PERIOD = 55
Const SDL_SCANCODE_SLASH = 56
Const SDL_SCANCODE_CAPSLOCK = 57
Const SDL_SCANCODE_F1 = 58
Const SDL_SCANCODE_F2 = 59
Const SDL_SCANCODE_F3 = 60
Const SDL_SCANCODE_F4 = 61
Const SDL_SCANCODE_F5 = 62
Const SDL_SCANCODE_F6 = 63
Const SDL_SCANCODE_F7 = 64
Const SDL_SCANCODE_F8 = 65
Const SDL_SCANCODE_F9 = 66
Const SDL_SCANCODE_F10 = 67
Const SDL_SCANCODE_F11 = 68
Const SDL_SCANCODE_F12 = 69
Const SDL_SCANCODE_PRINTSCREEN = 70
Const SDL_SCANCODE_SCROLLLOCK = 71
Const SDL_SCANCODE_PAUSE = 72
Const SDL_SCANCODE_INSERT = 73
Const SDL_SCANCODE_HOME = 74
Const SDL_SCANCODE_PAGEUP = 75
Const SDL_SCANCODE_DELETE = 76
Const SDL_SCANCODE_END = 77
Const SDL_SCANCODE_PAGEDOWN = 78
Const SDL_SCANCODE_RIGHT = 79
Const SDL_SCANCODE_LEFT = 80
Const SDL_SCANCODE_DOWN = 81
Const SDL_SCANCODE_UP = 82
Const SDL_SCANCODE_NUMLOCKCLEAR = 83
Const SDL_SCANCODE_KP_DIVIDE = 84
Const SDL_SCANCODE_KP_MULTIPLY = 85
Const SDL_SCANCODE_KP_MINUS = 86
Const SDL_SCANCODE_KP_PLUS = 87
Const SDL_SCANCODE_KP_ENTER = 88
Const SDL_SCANCODE_KP_1 = 89
Const SDL_SCANCODE_KP_2 = 90
Const SDL_SCANCODE_KP_3 = 91
Const SDL_SCANCODE_KP_4 = 92
Const SDL_SCANCODE_KP_5 = 93
Const SDL_SCANCODE_KP_6 = 94
Const SDL_SCANCODE_KP_7 = 95
Const SDL_SCANCODE_KP_8 = 96
Const SDL_SCANCODE_KP_9 = 97
Const SDL_SCANCODE_KP_0 = 98
Const SDL_SCANCODE_KP_PERIOD = 99
Const SDL_SCANCODE_NONUSBACKSLASH = 100
Const SDL_SCANCODE_APPLICATION = 101
Const SDL_SCANCODE_POWER = 102
Const SDL_SCANCODE_KP_EQUALS = 103
Const SDL_SCANCODE_F13 = 104
Const SDL_SCANCODE_F14 = 105
Const SDL_SCANCODE_F15 = 106
Const SDL_SCANCODE_F16 = 107
Const SDL_SCANCODE_F17 = 108
Const SDL_SCANCODE_F18 = 109
Const SDL_SCANCODE_F19 = 110
Const SDL_SCANCODE_F20 = 111
Const SDL_SCANCODE_F21 = 112
Const SDL_SCANCODE_F22 = 113
Const SDL_SCANCODE_F23 = 114
Const SDL_SCANCODE_F24 = 115
Const SDL_SCANCODE_EXECUTE = 116
Const SDL_SCANCODE_HELP = 117
Const SDL_SCANCODE_MENU = 118
Const SDL_SCANCODE_SELECT = 119
Const SDL_SCANCODE_STOP = 120
Const SDL_SCANCODE_AGAIN = 121
Const SDL_SCANCODE_UNDO = 122
Const SDL_SCANCODE_CUT = 123
Const SDL_SCANCODE_COPY = 124
Const SDL_SCANCODE_PASTE = 125
Const SDL_SCANCODE_FIND = 126
Const SDL_SCANCODE_MUTE = 127
Const SDL_SCANCODE_VOLUMEUP = 128
Const SDL_SCANCODE_VOLUMEDOWN = 129
Const SDL_SCANCODE_KP_COMMA = 133
Const SDL_SCANCODE_KP_EQUALSAS400 = 134
Const SDL_SCANCODE_INTERNATIONAL1 = 135
Const SDL_SCANCODE_INTERNATIONAL2 = 136
Const SDL_SCANCODE_INTERNATIONAL3 = 137
Const SDL_SCANCODE_INTERNATIONAL4 = 138
Const SDL_SCANCODE_INTERNATIONAL5 = 139
Const SDL_SCANCODE_INTERNATIONAL6 = 140
Const SDL_SCANCODE_INTERNATIONAL7 = 141
Const SDL_SCANCODE_INTERNATIONAL8 = 142
Const SDL_SCANCODE_INTERNATIONAL9 = 143
Const SDL_SCANCODE_LANG1 = 144
Const SDL_SCANCODE_LANG2 = 145
Const SDL_SCANCODE_LANG3 = 146
Const SDL_SCANCODE_LANG4 = 147
Const SDL_SCANCODE_LANG5 = 148
Const SDL_SCANCODE_LANG6 = 149
Const SDL_SCANCODE_LANG7 = 150
Const SDL_SCANCODE_LANG8 = 151
Const SDL_SCANCODE_LANG9 = 152
Const SDL_SCANCODE_ALTERASE = 153
Const SDL_SCANCODE_SYSREQ = 154
Const SDL_SCANCODE_CANCEL = 155
Const SDL_SCANCODE_CLEAR = 156
Const SDL_SCANCODE_PRIOR = 157
Const SDL_SCANCODE_RETURN2 = 158
Const SDL_SCANCODE_SEPARATOR = 159
Const SDL_SCANCODE_OUT = 160
Const SDL_SCANCODE_OPER = 161
Const SDL_SCANCODE_CLEARAGAIN = 162
Const SDL_SCANCODE_CRSEL = 163
Const SDL_SCANCODE_EXSEL = 164
Const SDL_SCANCODE_KP_00 = 176
Const SDL_SCANCODE_KP_000 = 177
Const SDL_SCANCODE_THOUSANDSSEPARATOR = 178
Const SDL_SCANCODE_DECIMALSEPARATOR = 179
Const SDL_SCANCODE_CURRENCYUNIT = 180
Const SDL_SCANCODE_CURRENCYSUBUNIT = 181
Const SDL_SCANCODE_KP_LEFTPAREN = 182
Const SDL_SCANCODE_KP_RIGHTPAREN = 183
Const SDL_SCANCODE_KP_LEFTBRACE = 184
Const SDL_SCANCODE_KP_RIGHTBRACE = 185
Const SDL_SCANCODE_KP_TAB = 186
Const SDL_SCANCODE_KP_BACKSPACE = 187
Const SDL_SCANCODE_KP_A = 188
Const SDL_SCANCODE_KP_B = 189
Const SDL_SCANCODE_KP_C = 190
Const SDL_SCANCODE_KP_D = 191
Const SDL_SCANCODE_KP_E = 192
Const SDL_SCANCODE_KP_F = 193
Const SDL_SCANCODE_KP_XOR = 194
Const SDL_SCANCODE_KP_POWER = 195
Const SDL_SCANCODE_KP_PERCENT = 196
Const SDL_SCANCODE_KP_LESS = 197
Const SDL_SCANCODE_KP_GREATER = 198
Const SDL_SCANCODE_KP_AMPERSAND = 199
Const SDL_SCANCODE_KP_DBLAMPERSAND = 200
Const SDL_SCANCODE_KP_VERTICALBAR = 201
Const SDL_SCANCODE_KP_DBLVERTICALBAR = 202
Const SDL_SCANCODE_KP_COLON = 203
Const SDL_SCANCODE_KP_HASH = 204
Const SDL_SCANCODE_KP_SPACE = 205
Const SDL_SCANCODE_KP_AT = 206
Const SDL_SCANCODE_KP_EXCLAM = 207
Const SDL_SCANCODE_KP_MEMSTORE = 208
Const SDL_SCANCODE_KP_MEMRECALL = 209
Const SDL_SCANCODE_KP_MEMCLEAR = 210
Const SDL_SCANCODE_KP_MEMADD = 211
Const SDL_SCANCODE_KP_MEMSUBTRACT = 212
Const SDL_SCANCODE_KP_MEMMULTIPLY = 213
Const SDL_SCANCODE_KP_MEMDIVIDE = 214
Const SDL_SCANCODE_KP_PLUSMINUS = 215
Const SDL_SCANCODE_KP_CLEAR = 216
Const SDL_SCANCODE_KP_CLEARENTRY = 217
Const SDL_SCANCODE_KP_BINARY = 218
Const SDL_SCANCODE_KP_OCTAL = 219
Const SDL_SCANCODE_KP_DECIMAL = 220
Const SDL_SCANCODE_KP_HEXADECIMAL = 221
Const SDL_SCANCODE_LCTRL = 224
Const SDL_SCANCODE_LSHIFT = 225
Const SDL_SCANCODE_LALT = 226
Const SDL_SCANCODE_LGUI = 227
Const SDL_SCANCODE_RCTRL = 228
Const SDL_SCANCODE_RSHIFT = 229
Const SDL_SCANCODE_RALT = 230
Const SDL_SCANCODE_RGUI = 231
Const SDL_SCANCODE_MODE = 257
Const SDL_SCANCODE_AUDIONEXT = 258
Const SDL_SCANCODE_AUDIOPREV = 259
Const SDL_SCANCODE_AUDIOSTOP = 260
Const SDL_SCANCODE_AUDIOPLAY = 261
Const SDL_SCANCODE_AUDIOMUTE = 262
Const SDL_SCANCODE_MEDIASELECT = 263
Const SDL_SCANCODE_WWW = 264
Const SDL_SCANCODE_MAIL = 265
Const SDL_SCANCODE_CALCULATOR = 266
Const SDL_SCANCODE_COMPUTER = 267
Const SDL_SCANCODE_AC_SEARCH = 268
Const SDL_SCANCODE_AC_HOME = 269
Const SDL_SCANCODE_AC_BACK = 270
Const SDL_SCANCODE_AC_FORWARD = 271
Const SDL_SCANCODE_AC_STOP = 272
Const SDL_SCANCODE_AC_REFRESH = 273
Const SDL_SCANCODE_AC_BOOKMARKS = 274
Const SDL_SCANCODE_BRIGHTNESSDOWN = 275
Const SDL_SCANCODE_BRIGHTNESSUP = 276
Const SDL_SCANCODE_DISPLAYSWITCH = 277
Const SDL_SCANCODE_KBDILLUMTOGGLE = 278
Const SDL_SCANCODE_KBDILLUMDOWN = 279
Const SDL_SCANCODE_KBDILLUMUP = 280
Const SDL_SCANCODE_EJECT = 281
Const SDL_SCANCODE_SLEEP = 282
Const SDL_SCANCODE_APP1 = 283
Const SDL_SCANCODE_APP2 = 284
Const SDL_NUM_SCANCODES = 512
Const SDL_SYSTEM_CURSOR_ARROW = 0
Const SDL_SYSTEM_CURSOR_IBEAM = 1
Const SDL_SYSTEM_CURSOR_WAIT = 2
Const SDL_SYSTEM_CURSOR_CROSSHAIR = 3
Const SDL_SYSTEM_CURSOR_WAITARROW = 4
Const SDL_SYSTEM_CURSOR_SIZENWSE = 5
Const SDL_SYSTEM_CURSOR_SIZENESW = 6
Const SDL_SYSTEM_CURSOR_SIZEWE = 7
Const SDL_SYSTEM_CURSOR_SIZENS = 8
Const SDL_SYSTEM_CURSOR_SIZEALL = 9
Const SDL_SYSTEM_CURSOR_NO = 10
Const SDL_SYSTEM_CURSOR_HAND = 11
Const SDL_NUM_SYSTEM_CURSORS = 12
Const SDL_SYSWM_UNKNOWN = 0
Const SDL_SYSWM_WINDOWS = 1
Const SDL_SYSWM_X11 = 2
Const SDL_SYSWM_DIRECTFB = 3
Const SDL_SYSWM_COCOA = 4
Const SDL_SYSWM_UIKIT = 5
Const SDL_SYSWM_WAYLAND = 6
Const SDL_SYSWM_MIR = 7
Const SDL_SYSWM_WINRT = 8
Const SDL_TEXTUREACCESS_STATIC = 0
Const SDL_TEXTUREACCESS_STREAMING = 1
Const SDL_TEXTUREACCESS_TARGET = 2
Const SDL_WINDOW_FULLSCREEN = $00000001
Const SDL_WINDOW_OPENGL = $00000002
Const SDL_WINDOW_SHOWN = $00000004
Const SDL_WINDOW_HIDDEN = $00000008
Const SDL_WINDOW_BORDERLESS = $00000010
Const SDL_WINDOW_RESIZABLE = $00000020
Const SDL_WINDOW_MINIMIZED = $00000040
Const SDL_WINDOW_MAXIMIZED = $00000080
Const SDL_WINDOW_INPUT_GRABBED = $00000100
Const SDL_WINDOW_INPUT_FOCUS = $00000200
Const SDL_WINDOW_MOUSE_FOCUS = $00000400
Const SDL_WINDOW_FULLSCREEN_DESKTOP = $00001001
Const SDL_WINDOW_FOREIGN = $00000800
Const SDL_WINDOW_ALLOW_HIGHDPI = $00002000
Const SDL_WINDOWEVENT_NONE = 0
Const SDL_WINDOWEVENT_SHOWN = 1
Const SDL_WINDOWEVENT_HIDDEN = 2
Const SDL_WINDOWEVENT_EXPOSED = 3
Const SDL_WINDOWEVENT_MOVED = 4
Const SDL_WINDOWEVENT_RESIZED = 5
Const SDL_WINDOWEVENT_SIZE_CHANGED = 6
Const SDL_WINDOWEVENT_MINIMIZED = 7
Const SDL_WINDOWEVENT_MAXIMIZED = 8
Const SDL_WINDOWEVENT_RESTORED = 9
Const SDL_WINDOWEVENT_ENTER = 10
Const SDL_WINDOWEVENT_LEAVE = 11
Const SDL_WINDOWEVENT_FOCUS_GAINED = 12
Const SDL_WINDOWEVENT_FOCUS_LOST = 13
Const SDL_WINDOWEVENT_CLOSE = 14
Const SDL_WINDOWPOS_CENTERED = $2FFF0000
Const SDL_WINDOWPOS_UNDEFINED = $1FFF0000
Const SDLK_UNKNOWN = 0
Const SDLK_RETURN = 13
Const SDLK_ESCAPE = 27
Const SDLK_BACKSPACE = 8
Const SDLK_TAB = 9
Const SDLK_SPACE = 32
Const SDLK_EXCLAIM = 33
Const SDLK_QUOTEDBL = 34
Const SDLK_HASH = 35
Const SDLK_PERCENT = 37
Const SDLK_DOLLAR = 36
Const SDLK_AMPERSAND = 38
Const SDLK_QUOTE = 39
Const SDLK_LEFTPAREN = 40
Const SDLK_RIGHTPAREN = 41
Const SDLK_ASTERISK = 42
Const SDLK_PLUS = 43
Const SDLK_COMMA = 44
Const SDLK_MINUS = 45
Const SDLK_PERIOD = 46
Const SDLK_SLASH = 47
Const SDLK_0 = 48
Const SDLK_1 = 49
Const SDLK_2 = 50
Const SDLK_3 = 51
Const SDLK_4 = 52
Const SDLK_5 = 53
Const SDLK_6 = 54
Const SDLK_7 = 55
Const SDLK_8 = 56
Const SDLK_9 = 57
Const SDLK_COLON = 58
Const SDLK_SEMICOLON = 59
Const SDLK_LESS = 60
Const SDLK_EQUALS = 61
Const SDLK_GREATER = 62
Const SDLK_QUESTION = 63
Const SDLK_AT = 64
Const SDLK_LEFTBRACKET = 91
Const SDLK_BACKSLASH = 92
Const SDLK_RIGHTBRACKET = 93
Const SDLK_CARET = 94
Const SDLK_UNDERSCORE = 95
Const SDLK_BACKQUOTE = 96
Const SDLK_a = 97
Const SDLK_b = 98
Const SDLK_c = 99
Const SDLK_d = 100
Const SDLK_e = 101
Const SDLK_f = 102
Const SDLK_g = 103
Const SDLK_h = 104
Const SDLK_i = 105
Const SDLK_j = 106
Const SDLK_k = 107
Const SDLK_l = 108
Const SDLK_m = 109
Const SDLK_n = 110
Const SDLK_o = 111
Const SDLK_p = 112
Const SDLK_q = 113
Const SDLK_r = 114
Const SDLK_s = 115
Const SDLK_t = 116
Const SDLK_u = 117
Const SDLK_v = 118
Const SDLK_w = 119
Const SDLK_x = 120
Const SDLK_y = 121
Const SDLK_z = 122
Const SDLK_CAPSLOCK = 1073741881
Const SDLK_F1 = 1073741882
Const SDLK_F2 = 1073741883
Const SDLK_F3 = 1073741884
Const SDLK_F4 = 1073741885
Const SDLK_F5 = 1073741886
Const SDLK_F6 = 1073741887
Const SDLK_F7 = 1073741888
Const SDLK_F8 = 1073741889
Const SDLK_F9 = 1073741890
Const SDLK_F10 = 1073741891
Const SDLK_F11 = 1073741892
Const SDLK_F12 = 1073741893
Const SDLK_PRINTSCREEN = 1073741894
Const SDLK_SCROLLLOCK = 1073741895
Const SDLK_PAUSE = 1073741896
Const SDLK_INSERT = 1073741897
Const SDLK_HOME = 1073741898
Const SDLK_PAGEUP = 1073741899
Const SDLK_DELETE = 127
Const SDLK_END = 1073741901
Const SDLK_PAGEDOWN = 1073741902
Const SDLK_RIGHT = 1073741903
Const SDLK_LEFT = 1073741904
Const SDLK_DOWN = 1073741905
Const SDLK_UP = 1073741906
Const SDLK_NUMLOCKCLEAR = 1073741907
Const SDLK_KP_DIVIDE = 1073741908
Const SDLK_KP_MULTIPLY = 1073741909
Const SDLK_KP_MINUS = 1073741910
Const SDLK_KP_PLUS = 1073741911
Const SDLK_KP_ENTER = 1073741912
Const SDLK_KP_1 = 1073741913
Const SDLK_KP_2 = 1073741914
Const SDLK_KP_3 = 1073741915
Const SDLK_KP_4 = 1073741916
Const SDLK_KP_5 = 1073741917
Const SDLK_KP_6 = 1073741918
Const SDLK_KP_7 = 1073741919
Const SDLK_KP_8 = 1073741920
Const SDLK_KP_9 = 1073741921
Const SDLK_KP_0 = 1073741922
Const SDLK_KP_PERIOD = 1073741923
Const SDLK_APPLICATION = 1073741925
Const SDLK_POWER = 1073741926
Const SDLK_KP_EQUALS = 1073741927
Const SDLK_F13 = 1073741928
Const SDLK_F14 = 1073741929
Const SDLK_F15 = 1073741930
Const SDLK_F16 = 1073741931
Const SDLK_F17 = 1073741932
Const SDLK_F18 = 1073741933
Const SDLK_F19 = 1073741934
Const SDLK_F20 = 1073741935
Const SDLK_F21 = 1073741936
Const SDLK_F22 = 1073741937
Const SDLK_F23 = 1073741938
Const SDLK_F24 = 1073741939
Const SDLK_EXECUTE = 1073741940
Const SDLK_HELP = 1073741941
Const SDLK_MENU = 1073741942
Const SDLK_SELECT = 1073741943
Const SDLK_STOP = 1073741944
Const SDLK_AGAIN = 1073741945
Const SDLK_UNDO = 1073741946
Const SDLK_CUT = 1073741947
Const SDLK_COPY = 1073741948
Const SDLK_PASTE = 1073741949
Const SDLK_FIND = 1073741950
Const SDLK_MUTE = 1073741951
Const SDLK_VOLUMEUP = 1073741952
Const SDLK_VOLUMEDOWN = 1073741953
Const SDLK_KP_COMMA = 1073741957
Const SDLK_KP_EQUALSAS400 = 1073741958
Const SDLK_ALTERASE = 1073741977
Const SDLK_SYSREQ = 1073741978
Const SDLK_CANCEL = 1073741979
Const SDLK_CLEAR = 1073741980
Const SDLK_PRIOR = 1073741981
Const SDLK_RETURN2 = 1073741982
Const SDLK_SEPARATOR = 1073741983
Const SDLK_OUT = 1073741984
Const SDLK_OPER = 1073741985
Const SDLK_CLEARAGAIN = 1073741986
Const SDLK_CRSEL = 1073741987
Const SDLK_EXSEL = 1073741988
Const SDLK_KP_00 = 1073742000
Const SDLK_KP_000 = 1073742001
Const SDLK_THOUSANDSSEPARATOR = 1073742002
Const SDLK_DECIMALSEPARATOR = 1073742003
Const SDLK_CURRENCYUNIT = 1073742004
Const SDLK_CURRENCYSUBUNIT = 1073742005
Const SDLK_KP_LEFTPAREN = 1073742006
Const SDLK_KP_RIGHTPAREN = 1073742007
Const SDLK_KP_LEFTBRACE = 1073742008
Const SDLK_KP_RIGHTBRACE = 1073742009
Const SDLK_KP_TAB = 1073742010
Const SDLK_KP_BACKSPACE = 1073742011
Const SDLK_KP_A = 1073742012
Const SDLK_KP_B = 1073742013
Const SDLK_KP_C = 1073742014
Const SDLK_KP_D = 1073742015
Const SDLK_KP_E = 1073742016
Const SDLK_KP_F = 1073742017
Const SDLK_KP_XOR = 1073742018
Const SDLK_KP_POWER = 1073742019
Const SDLK_KP_PERCENT = 1073742020
Const SDLK_KP_LESS = 1073742021
Const SDLK_KP_GREATER = 1073742022
Const SDLK_KP_AMPERSAND = 1073742023
Const SDLK_KP_DBLAMPERSAND = 1073742024
Const SDLK_KP_VERTICALBAR = 1073742025
Const SDLK_KP_DBLVERTICALBAR = 1073742026
Const SDLK_KP_COLON = 1073742027
Const SDLK_KP_HASH = 1073742028
Const SDLK_KP_SPACE = 1073742029
Const SDLK_KP_AT = 1073742030
Const SDLK_KP_EXCLAM = 1073742031
Const SDLK_KP_MEMSTORE = 1073742032
Const SDLK_KP_MEMRECALL = 1073742033
Const SDLK_KP_MEMCLEAR = 1073742034
Const SDLK_KP_MEMADD = 1073742035
Const SDLK_KP_MEMSUBTRACT = 1073742036
Const SDLK_KP_MEMMULTIPLY = 1073742037
Const SDLK_KP_MEMDIVIDE = 1073742038
Const SDLK_KP_PLUSMINUS = 1073742039
Const SDLK_KP_CLEAR = 1073742040
Const SDLK_KP_CLEARENTRY = 1073742041
Const SDLK_KP_BINARY = 1073742042
Const SDLK_KP_OCTAL = 1073742043
Const SDLK_KP_DECIMAL = 1073742044
Const SDLK_KP_HEXADECIMAL = 1073742045
Const SDLK_LCTRL = 1073742048
Const SDLK_LSHIFT = 1073742049
Const SDLK_LALT = 1073742050
Const SDLK_LGUI = 1073742051
Const SDLK_RCTRL = 1073742052
Const SDLK_RSHIFT = 1073742053
Const SDLK_RALT = 1073742054
Const SDLK_RGUI = 1073742055
Const SDLK_MODE = 1073742081
Const SDLK_AUDIONEXT = 1073742082
Const SDLK_AUDIOPREV = 1073742083
Const SDLK_AUDIOSTOP = 1073742084
Const SDLK_AUDIOPLAY = 1073742085
Const SDLK_AUDIOMUTE = 1073742086
Const SDLK_MEDIASELECT = 1073742087
Const SDLK_WWW = 1073742088
Const SDLK_MAIL = 1073742089
Const SDLK_CALCULATOR = 1073742090
Const SDLK_COMPUTER = 1073742091
Const SDLK_AC_SEARCH = 1073742092
Const SDLK_AC_HOME = 1073742093
Const SDLK_AC_BACK = 1073742094
Const SDLK_AC_FORWARD = 1073742095
Const SDLK_AC_STOP = 1073742096
Const SDLK_AC_REFRESH = 1073742097
Const SDLK_AC_BOOKMARKS = 1073742098
Const SDLK_BRIGHTNESSDOWN = 1073742099
Const SDLK_BRIGHTNESSUP = 1073742100
Const SDLK_DISPLAYSWITCH = 1073742101
Const SDLK_KBDILLUMTOGGLE = 1073742102
Const SDLK_KBDILLUMDOWN = 1073742103
Const SDLK_KBDILLUMUP = 1073742104
Const SDLK_EJECT = 1073742105
Const SDLK_SLEEP = 1073742106

Struct SDL_assert_data
	Dim always_ignore
	Dim trigger_count
	Dim condition			'Pointer to char buffer
	Dim filename			'Pointer to char buffer
	Dim linenum
	Dim function_			'Pointer to char buffer
	Dim next_ As SDL_assert_data
EndStruct

Struct SDL_DisplayMode
	Dim format
	Dim w
	Dim h
	Dim refresh_rate
	Dim driverdata
EndStruct

Struct SDL_Event
	Dim type
	Dim timestamp
	Dim padding(12)
EndStruct

Struct SDL_GameControllerButtonBind
	Dim bindType
	Dim value1
	Dim value2
EndStruct

'Struct SDL_HapticEffect
'	Dim type	'An unsigned short!!
'EndStruct

Struct SDL_JoystickGUID
	Dim data(4)
EndStruct

Struct SDL_MessageBoxData
	Dim flags
	Dim window
	Dim title		'Pointer to UTF-8 char buffer
	Dim message		'Pointer to UTF-8 char buffer
	Dim numbuttons
	Dim buttons		'Pointer to SDL_MessageBoxButtonData (not mapped in NB, write data in a memory buffer directly)
	Dim colorScheme	'Not added yet, set to 0
EndStruct

Struct SDL_Palette
	Dim ncolors
	Dim colors	'Pointer to RGBA data
	Dim version
	Dim refcount
EndStruct

Struct SDL_PixelFormat
	Dim format
	Dim palette As SDL_Palette
	Dim bitsAndBytesPerPixel	'Dirty way of handling it in NB. Check C version
	Dim Rmask
	Dim Gmask
	Dim Bmask
	Dim Amask
	Dim loss					'RGBA
	Dim shift					'RGBA
	Dim refcount
	Dim next_ As SDL_PixelFormat
EndStruct

Struct SDL_Rect
	Dim x
	Dim y
	Dim w
	Dim h
EndStruct

Struct SDL_RendererInfo
	Dim name					'Pointer to char buffer
	Dim flags
	Dim num_texture_formats
	Dim texture_format0
	Dim texture_format1
	Dim texture_format2
	Dim texture_format3
	Dim texture_format4
	Dim texture_format5
	Dim texture_format6
	Dim texture_format7
	Dim texture_format8
	Dim texture_format9
	Dim texture_format10
	Dim texture_format11
	Dim texture_format12
	Dim texture_format13
	Dim texture_format14
	Dim texture_format15
	Dim max_texture_width
	Dim max_texture_height
EndStruct

Struct SDL_Surface
	Dim flags
	Dim format As SDL_PixelFormat
	Dim w
	Dim h
	Dim pitch
	Dim pixels
	Dim userdata
	Dim locked
	Dim lockdata
	
	'SDL_Rect:
	Dim clip_rect_x
	Dim clip_rect_y
	Dim clip_rect_w
	Dim clip_rect_h
	
	Dim map
	Dim refcount
EndStruct

Struct SDL_SysWMinfo
	Dim version_major
	Dim version_minor
	Dim version_patch
	Dim subsystem
	Dim data1	'Platform-specific. Normally the OS window handle
	Dim data2	'Platform-specific
	Dim data3
EndStruct

Extern "Linkage:C"

'Initialization and Shutdown
Function SDL_Init%(flags)
Function SDL_InitSubSystem%(flags)
Function SDL_Quit()
Function SDL_QuitSubSystem(flags)
Function SDL_SetMainReady()
Function SDL_WasInit%(flags)

'Error Handling
Function SDL_ClearError()
Function SDL_GetError() As Pchar
Function SDL_SetError%(err As Pchar)

'Log Handling
Function SDL_Log(msg As Pchar)
Function SDL_LogCritical(category, msg As Pchar)
Function SDL_LogDebug(category, msg As Pchar)
Function SDL_LogError(category, msg As Pchar)
Function SDL_LogGetOutputFunction(callback, userdata)	'Both are pointers
Function SDL_LogGetPriority%(category)
Function SDL_LogInfo(category, msg As Pchar)
Function SDL_LogMessage(category, priority, msg As Pchar)
Function SDL_LogResetPriorities()
Function SDL_LogSetAllPriority(priority)
Function SDL_LogSetOutputFunction(callback, userdata)	'Both are pointers
Function SDL_LogSetPriority(category, priority)
Function SDL_LogVerbose(category, msg As Pchar)
Function SDL_LogWarn(category, msg As Pchar)

'Assertions
Function SDL_GetAssertionHandler%(puserdata)	'puserdata is a pointer
Function SDL_GetAssertionReport() As SDL_assert_data
Function SDL_GetDefaultAssertionHandler%()
Function SDL_ResetAssertionReport()
Function SDL_SetAssertionHandler(handler, userdata)	'Both are pointers
'Function SDL_TriggerBreakpoint()		'This is not a function, but a macro. Not supported yet
'Function SDL_assert(condition)			'This is not a function, but a macro. Not supported yet
'Function SDL_assert_paranoid(condition)	'This is not a function, but a macro. Not supported yet
'Function SDL_assert_release(condition)	'This is not a function, but a macro. Not supported yet

'Querying SDL Version
Function SDL_GetRevision() As Pchar
Function SDL_GetRevisionNumber%()
Function SDL_GetVersion(ver)	'ver is a pointer to three unsigned byte values (major, minor, patch)

'----------------------------
'VIDEO
'----------------------------

'Display and Window Management
Function SDL_CreateWindow%(title As Pchar, x, y, w, h, flags)
Function SDL_CreateWindowAndRenderer%(width, height, window_flags, window, renderer)	'Last 2 params are pointers to int
Function SDL_CreateWindowFrom%(data)
Function SDL_DestroyWindow(window)
Function SDL_DisableScreenSaver()
Function SDL_EnableScreenSaver()
Function SDL_GL_BindTexture%(texture, width, height)	'Last 2 params are pointers to float
Function SDL_GL_CreateContext%(window)
Function SDL_GL_DeleteContext(context)
Function SDL_GL_ExtensionSupported%(extension As Pchar)
Function SDL_GL_GetAttribute%(attr, value)				'value is a pointer to int
Function SDL_GL_GetCurrentContext%()
Function SDL_GL_GetCurrentWindow%()
Function SDL_GL_GetDrawableSize(window, w, h)			'Last 2 params are pointers to int
Function SDL_GL_GetProcAddress%(proc As Pchar)
Function SDL_GL_GetSwapInterval%()
Function SDL_GL_LoadLibrary%(path As Pchar)
Function SDL_GL_MakeCurrent%(window, context)
Function SDL_GL_ResetAttributes()
Function SDL_GL_SetAttribute%(attr, value)
Function SDL_GL_SetSwapInterval%(interval)
Function SDL_GL_SwapWindow(window)
Function SDL_GL_UnbindTexture%(texture)
Function SDL_GL_UnloadLibrary()
Function SDL_GetClosestDisplayMode(displayIndex, mode As SDL_DisplayMode, closest As SDL_DisplayMode) As SDL_DisplayMode
Function SDL_GetCurrentDisplayMode%(displayIndex, mode As SDL_DisplayMode)
Function SDL_GetCurrentVideoDriver() As Pchar
Function SDL_GetDesktopDisplayMode%(displayIndex, mode As SDL_DisplayMode)
Function SDL_GetDisplayBounds%(displayIndex, rect As SDL_Rect)
Function SDL_GetDisplayMode%(displayIndex, modeIndex, mode As SDL_DisplayMode)
Function SDL_GetDisplayName(displayIndex) As Pchar
Function SDL_GetNumDisplayModes%(displayIndex)
Function SDL_GetNumVideoDisplays%()
Function SDL_GetNumVideoDrivers%()
Function SDL_GetVideoDriver(index) As Pchar
Function SDL_GetWindowBrightness#(window)
Function SDL_GetWindowData%(window, name As Pchar)
Function SDL_GetWindowDisplayIndex%(window)
Function SDL_GetWindowDisplayMode%(window, mode As SDL_DisplayMode)
Function SDL_GetWindowFlags%(window)
Function SDL_GetWindowFromID%(id)
Function SDL_GetWindowGammaRamp%(window, red, green, blue)	'Last 3 params are pointers to unsigned short
Function SDL_GetWindowGrab%(window)
Function SDL_GetWindowID%(window)
Function SDL_GetWindowMaximumSize(window, w, h)				'Last 2 params are pointers to int
Function SDL_GetWindowMinimumSize(window, w, h)				'Last 2 params are pointers to int
Function SDL_GetWindowPixelFormat%(window)
Function SDL_GetWindowPosition(window, x, y)				'Last 2 params are pointers to int
Function SDL_GetWindowSize(window, w, h)					'Last 2 params are pointers to int
Function SDL_GetWindowSurface(window) As SDL_Surface
Function SDL_GetWindowTitle(window) As Pchar
Function SDL_HideWindow(window)
Function SDL_IsScreenSaverEnabled%()
Function SDL_MaximizeWindow(window)
Function SDL_MinimizeWindow(window)
Function SDL_RaiseWindow(window)
Function SDL_RestoreWindow(window)
Function SDL_SetWindowBordered(window, bordered)
Function SDL_SetWindowBrightness%(window, brightness#)
Function SDL_SetWindowData%(window, name As Pchar, userdata)
Function SDL_SetWindowDisplayMode%(window, mode As SDL_DisplayMode)
Function SDL_SetWindowFullscreen%(window, flags)
Function SDL_SetWindowGammaRamp(window, red, green, blue)	'Last 3 params are pointers to unsigned short arrays
Function SDL_SetWindowGrab(window, grabbed)
Function SDL_SetWindowIcon(window, icon As SDL_Surface)
Function SDL_SetWindowMaximumSize(window, max_w, max_h)
Function SDL_SetWindowMinimumSize(window, max_w, max_h)
Function SDL_SetWindowPosition(window, x, y)
Function SDL_SetWindowSize(window, w, h)
Function SDL_SetWindowTitle(window, title As Pchar)
Function SDL_ShowMessageBox%(messageboxdata As SDL_MessageBoxData, buttonid)	'buttonid is a pointer to int
Function SDL_ShowSimpleMessageBox%(flags, title As Pchar, message As Pchar, window)
Function SDL_ShowWindow(window)
Function SDL_UpdateWindowSurface%(window)
Function SDL_UpdateWindowSurfaceRects%(window, rects, numrects)	'Rects is a pointer to an array of SDL_Rect elements
Function SDL_VideoInit%(driver_name As Pchar)
Function SDL_VideoQuit()

'2D Accelerated Rendering
Function SDL_CreateRenderer%(window, index, flags)
Function SDL_CreateSoftwareRenderer%(surface As SDL_Surface)
Function SDL_CreateTexture(renderer, format, access, w, h)	'NOTE: Need to add all SDL_PIXELFORMAT_* constants
Function SDL_CreateTextureFromSurface(renderer, surface As SDL_Surface)
'Function SDL_CreateWindowAndRenderer%(width, height, window_flags, window, renderer)	'Last 2 params are pointers
Function SDL_DestroyRenderer(renderer)
Function SDL_DestroyTexture(texture)
Function SDL_GetNumRenderDrivers%()
Function SDL_GetRenderDrawBlendMode%(renderer, blendMode)	'blendMode is a pointer to int
Function SDL_GetRenderDrawColor%(renderer, r, g, b, a)		'Last 4 params are pointers to unsigned byte
Function SDL_GetRenderDriverInfo%(index, info As SDL_RendererInfo)
Function SDL_GetRenderTarget%(renderer)
Function SDL_GetRenderer%(window)
Function SDL_GetRendererInfo%(renderer, info As SDL_RendererInfo)
Function SDL_GetRendererOutputSize%(renderer, w, h)			'Last 2 params are pointers to int
Function SDL_GetTextureAlphaMod%(texture, alpha)			'alpha is a pointer to unsigned byte
Function SDL_GetTextureBlendMode%(texture, blendMode)		'blendMode is a pointer to int
Function SDL_GetTextureColorMod%(texture, r, g, b)			'Last 3 params are pointers to unsigned byte
Function SDL_LockTexture%(texture, rect As SDL_Rect, pixels, pitch)	'Last 2 params are pointers
Function SDL_QueryTexture%(texture, format, access, w, h)	'Last 4 params are pointers to int
Function SDL_RenderClear%(renderer)
Function SDL_RenderCopy%(renderer, texture, srcrect As SDL_Rect, dstrect As SDL_Rect)
'Function SDL_RenderCopyEx%(renderer, texture, srcrect As SDL_Rect, dstrect As SDL_Rect, angle#, center As SDL_Point, flip)	'angle is actually a double (not supported)
Function SDL_RenderDrawLine%(renderer, x1, y1, x2, y2)
Function SDL_RenderDrawLines%(renderer, points, count)	'points is a pointer to SDL_Point elements
Function SDL_RenderDrawPoint%(renderer, x, y)
Function SDL_RenderDrawPoints%(renderer, points, count)	'points is a pointer to SDL_Point elements
Function SDL_RenderDrawRect%(renderer, rect As SDL_Rect)
Function SDL_RenderDrawRects%(renderer, rects, count)	'rects is a pointer to SDL_Rect elements
Function SDL_RenderFillRect%(renderer, rect As SDL_Rect)
Function SDL_RenderFillRects%(renderer, rects, count)	'rects is a pointer to SDL_Rect elements
Function SDL_RenderGetClipRect(renderer, rect As SDL_Rect)
Function SDL_RenderGetLogicalSize(renderer, w, h)		'Last 2 params are pointers to int
Function SDL_RenderGetScale(renderer, scaleX, scaleY)	'Last 2 params are pointers to float
Function SDL_RenderGetViewport(renderer, rect As SDL_Rect)
Function SDL_RenderIsClipEnabled%(renderer)
Function SDL_RenderPresent(renderer)
Function SDL_RenderReadPixels%(renderer, rect As SDL_Rect, format, pixels, pitch)
Function SDL_RenderSetClipRect%(renderer, rect As SDL_Rect)
Function SDL_RenderSetLogicalSize%(renderer, w, h)
Function SDL_RenderSetScale%(renderer, scaleX#, scaleY#)
Function SDL_RenderSetViewport%(renderer, rect As SDL_Rect)
Function SDL_RenderTargetSupported%(renderer)
Function SDL_SetRenderDrawBlendMode%(renderer, blendMode)
'Function SDL_SetRenderDrawColor%(renderer, r, g, b, a)	'Last 4 params are unsigned bytes (unsupported)
Function SDL_SetRenderTarget%(renderer, texture)
'Function SDL_SetTextureAlphaMod%(renderer, alpha)	'alpha is an unsigned byte (unsupported)
Function SDL_SetTextureBlendMode%(texture, blendMode)
Function SDL_SetTextureColorMod%(texture, r, g, b)	'Last 3 params are unsigned bytes (unsupported)
Function SDL_UnlockTexture(texture)
Function SDL_UpdateTexture%(texture, rect As SDL_Rect, pixels, pitch)
Function SDL_UpdateYUVTexture(texture, rect As SDL_Rect, Yplane, Ypitch, Uplane, Upitch, Vplane, Vpitch)	'Yplane, Uplane, and Vplane are pointers to unsigned byte buffers

'Pixel Formats and Conversion Routines
Function SDL_AllocFormat(pixel_format) As SDL_PixelFormat
Function SDL_AllocPalette(ncolors) As SDL_Palette
Function SDL_CalculateGammaRamp(gamma, ramp)	'ramp is a pointer to 256 unsigned short values
Function SDL_FreeFormat(format As SDL_PixelFormat)
Function SDL_FreePalette(palette As SDL_Palette)
Function SDL_GetPixelFormatName(format) As Pchar
Function SDL_GetRGB(pixel, format As SDL_PixelFormat, r, g, b)	'Last 3 params are pointers to unsigned bytes
Function SDL_GetRGBA(pixel, format As SDL_PixelFormat, r, g, b, a)	'Last 4 params are pointers to unsigned bytes
'Function SDL_MapRGB%(format As SDL_PixelFormat, r, g, b)			'Last 3 params are unsigned bytes (unsupported)
'Function SDL_MapRGBA%(format As SDL_PixelFormat, r, g, b, a)		'Last 4 params are unsigned bytes (unsupported)
Function SDL_MasksToPixelFormatEnum%(bpp, Rmask, Gmask, Bmask, Amask)
Function SDL_PixelFormatEnumToMasks%(format As SDL_PixelFormat, bpp, Rmask, Gmask, Bmask, Amask)	'Last 5 params are pointers to int
Function SDL_SetPaletteColors%(palette As SDL_Palette, colors, firstcolor, ncolors)	'colors is a pointer to a buffer of ints
Function SDL_SetPixelFormatPalette%(format As SDL_PixelFormat, palette As SDL_Palette)

'Rectangle Functions
Function SDL_EnclosePoints%(points, count, clip, result As SDL_Rect)
Function SDL_HasIntersection%(A As SDL_Rect, B As SDL_Rect)
Function SDL_IntersectRect%(A As SDL_Rect, B As SDL_Rect, result As SDL_Rect)
Function SDL_IntersectRectAndLine(rect As SDL_Rect, X1, Y1, X2, Y2)	'Last 4 params are pointers to int (why?)
Function SDL_RectEmpty%(r As SDL_Rect)
Function SDL_RectEquals%(a As SDL_Rect, b As SDL_rect)
Function SDL_UnionRect(A As SDL_Rect, B As SDL_Rect, result As SDL_Rect)

'Surface Creation and Simple Drawing
Function SDL_BlitScaled%(src As SDL_Surface, srcrect As SDL_Rect, dst As SDL_Surface, dstrect As SDL_Rect)
Function SDL_BlitSurface%(src As SDL_Surface, srcrect As SDL_Rect, dst As SDL_Surface, dstrect As SDL_Rect)
Function SDL_ConvertPixels%(width, height, src_format, src, src_pitch, dst_format, dst, dst_pitch)
Function SDL_ConvertSurface(src As SDL_Surface, fmt As SDL_PixelFormat, flags) As SDL_Surface
Function SDL_ConvertSurfaceFormat(src As SDL_Surface, pixel_format, flags) As SDL_Surface
Function SDL_CreateRGBSurface(flags, width, height, depth, Rmask, Gmask, Bmask, Amask) As SDL_Surface
Function SDL_CreateRGBSurfaceFrom(pixels, width, height, depth, pitch, Rmask, Gmask, Bmask, Amask) As SDL_Surface
Function SDL_FillRect%(dst As SDL_Surface, rect As SDL_Rect, color)
Function SDL_FillRects%(dst As SDL_Surface, rects, count, color)	'rect is a buffer of SDL_Rect objects
Function SDL_FreeSurface(surface As SDL_Surface)
Function SDL_GetClipRect(surface As SDL_Surface, rect As SDL_Rect)
Function SDL_GetColorKey%(surface As SDL_Surface, key)				'key is a pointer to int
Function SDL_GetSurfaceAlphaMod%(surface As SDL_Surface, alpha)		'alpha is a pointer to unsigned byte
Function SDL_GetSurfaceBlendMode%(surface As SDL_Surface, blendMode)	'blendMode is a pointer to int
Function SDL_GetSurfaceColorMod%(surface As SDL_Surface, r, g, b)		'Last 3 params are pointers to unsigned byte
Function SDL_LoadBMP(file As Pchar) As SDL_Surface
'Function SDL_LoadBMP_RW(src As SDL_RWops, freesrc) As SDL_Surface
Function SDL_LockSurface%(surface As SDL_Surface)
Function SDL_LowerBlit%(src As SDL_Surface, srcrect As SDL_Rect, dst As SDL_Surface, dstrect As SDL_Rect)
Function SDL_LowerBlitScaled%(src As SDL_Surface, srcrect As SDL_Rect, dst As SDL_Surface, dstrect As SDL_Rect)
'Function SDL_MUSTLOCK%(surface As SDL_Surface)
Function SDL_SaveBMP%(surface As SDL_Surface, file As Pchar)
'Function SDL_SaveBMP_RW%(surface As SDL_Surface, dst As SDL_RWops, freedst)
Function SDL_SetClipRect%(surface As SDL_Surface, rect As SDL_Rect)
Function SDL_SetColorKey%(surface As SDL_Surface, flag, key)
'Function SDL_SetSurfaceAlphaMod%(surface As SDL_Surface, alpha)	'alpha is an unsigned byte
Function SDL_SetSurfaceBlendMode%(surface As SDL_Surface, blendMode)
'Function SDL_SetSurfaceColorMod%(surface As SDL_Surface, r, g, b)	'Last 3 params are unsigned bytes
Function SDL_SetSurfacePalette%(surface As SDL_Surface, palette As SDL_Palette)
Function SDL_SetSurfaceRLE%(surface As SDL_Surface, flag)
Function SDL_UnlockSurface(surface As SDL_Surface)

'Platform-specific Window Management
Function SDL_GetWindowWMInfo%(window, info As SDL_SysWMinfo)

'Clipboard Handling
Function SDL_GetClipboardText() As Pchar
Function SDL_HasClipboardText%()
Function SDL_SetClipboardText%(text As Pchar)

'----------------------------
'INPUT EVENTS
'----------------------------

'Event Handling
Function SDL_AddEventWatch(filter, userdata)	'userdata is a pointer
Function SDL_DelEventWatch(filter, userdata)	'userdata is a pointer
'Function SDL_EventState%(type, state)			'Returns an unsigned byte
Function SDL_FilterEvents(filter, userdata)		'userdata is a pointer
Function SDL_FlushEvent(type)
Function SDL_FlushEvents(minType, maxType)
Function SDL_GetEventFilter(filter, userdata)	'userdata is a pointer
Function SDL_GetNumTouchDevices%()
'Function SDL_GetNumTouchFingers%(touchId)		'touchId is a long integer
'Function SDL_GetTouchDevice%(index)			'Returns a long integer
Function SDL_GetTouchFinger%(touchID, index)	'Returns a long integer. touchID is a long integer
Function SDL_HasEvent%(type)
Function SDL_HasEvents%(minType, maxType)
'Function SDL_LoadDollarTemplates%(touchId, src As SDL_RWops)	'touchId is a long integer
Function SDL_PeepEvents%(events, numevents, action, minType, maxType)	'events is a buffer to SDL_Event objects
Function SDL_PollEvent%(event As SDL_Event)
Function SDL_PumpEvents()
Function SDL_PushEvent%(event As SDL_Event)
Function SDL_QuitRequested%()
'Function SDL_RecordGesture%(touchId)	'touchId is a long integer
Function SDL_RegisterEvents%(numevents)
'Function SDL_SaveAllDollarTemplates%(dst As SDL_RWops)
'Function SDL_SaveDollarTemplate%(gestureId, dst As SDL_RWops)	'gestureId is a long integer
Function SDL_SetEventFilter(filter, userdata)
Function SDL_WaitEvent%(event As SDL_Event)
Function SDL_WaitEventTimeout%(event As SDL_Event, timeout)

'Keyboard Support
Function SDL_GetKeyFromName%(name As Pchar)
Function SDL_GetKeyFromScancode%(scancode)
Function SDL_GetKeyName(key) As Pchar
Function SDL_GetKeyboardFocus%()	'Returns an SDL_Window pointer
Function SDL_GetKeyboardState%(numkeys)	'Numkeys is a pointer to int. Returns a pointer to unsigned bytes
Function SDL_GetModState%()
Function SDL_GetScancodeFromKey%(key)
Function SDL_GetScancodeFromName%(name As Pchar)
Function SDL_GetScancodeName(scancode) As Pchar
Function SDL_HasScreenKeyboardSupport%()
Function SDL_IsScreenKeyboardShown%(window)	'window is a SDL_Window pointer
Function SDL_IsTextInputActive%()
Function SDL_SetModState(modstate)
Function SDL_SetTextInputRect(rect As SDL_Rect)
Function SDL_StartTextInput()
Function SDL_StopTextInput()

'Mouse Support
Function SDL_CreateColorCursor%(surface As SDL_Surface, hot_x, hot_y)	'Returns a SDL_Cursor pointer
Function SDL_CreateCursor%(data, mask, w, h, hot_x, hot_y)				'Returns a SDL_Cursor pointer. data and mask are unsigned byte pointers
Function SDL_CreateSystemCursor%(id)	'Returns a SDL_Cursor pointer
Function SDL_FreeCursor(cursor)			'cursor is a SDL_Cursor pointer
Function SDL_GetCursor%()				'Returns a SDL_Cursor pointer
Function SDL_GetDefaultCursor%()		'Returns a SDL_Cursor pointer
Function SDL_GetMouseFocus%()			'Returns a SDL_Window pointer
Function SDL_GetMouseState%(x, y)		'Params are int pointers
Function SDL_GetRelativeMouseMode%()
Function SDL_GetRelativeMouseState%(x, y)	'Params are int pointers
Function SDL_SetCursor(cursor)			'Param is a SDL_Cursor pointer
Function SDL_SetRelativeMouseMode%(enabled)
Function SDL_ShowCursor%(toggle)
Function SDL_WarpMouseInWindow(window, x, y)	'window is a SDL_Window pointer

'Joystick Support
Function SDL_JoystickClose(joystick)		'Param is a SDL_Joystick pointer
Function SDL_JoystickEventState%(state)
Function SDL_JoystickGetAttached%(joystick)	'Param is a SDL_Joystick pointer
'Function SDL_JoystickGetAxis%(joystick, axis)	'joystick is a SDL_Joystick pointer. Returns a short integer
Function SDL_JoystickGetBall%(joystick, ball, dx, dy)	'joystick is a SDL_Joystick pointer. dx and dy are integer pointers
Function SDL_JoystickGetButton%(joystick, button)	'joystick is a SDL_Joystick pointer. Returns an unsigned byte
'These are returned by copy, not by pointer:
'Function SDL_JoystickGetDeviceGUID(device_index) As SDL_JoystickGUID
'Function SDL_JoystickGetGUID(joystick) As SDL_JoystickGUID	'Param is a SDL_Joystick pointer
'Function SDL_JoystickGetGUIDFromString(pchGUID As Pchar) As SDL_JoystickGUID
'Function SDL_JoystickGetGUIDString(guid As SDL_JoystickGUID, pszGUID As Pchar, cbGUID)	'guid is received by copy
'Function SDL_JoystickGetHat%(joystick, hat) 'joystick is a SDL_Joystick pointer. Returns an unsigned byte
Function SDL_JoystickInstanceID%(joystick)	'joystick is a SDL_Joystick pointer
Function SDL_JoystickName(joystick) As Pchar	'joystick is a SDL_Joystick pointer
Function SDL_JoystickNameForIndex(device_index) As Pchar
Function SDL_JoystickNumAxes%(joystick)	'joystick is a SDL_Joystick pointer
Function SDL_JoystickNumBalls%(joystick) 'joystick is a SDL_Joystick pointer
Function SDL_JoystickNumButtons%(joystick)	'joystick is a SDL_Joystick pointer
Function SDL_JoystickNumHats%(joystick)	'joystick is a SDL_Joystick pointer
Function SDL_JoystickOpen%(device_index)	'Returns a SDL_Joystick pointer
Function SDL_JoystickUpdate()
Function SDL_NumJoysticks%()

'Game Controller Support
Function SDL_GameControllerAddMapping%(mappingString As Pchar)
Function SDL_GameControllerAddMappingsFromFile%(filename As Pchar)
'Function SDL_GameControllerAddMappingsFromRW%(rw As SDL_RWops, freerw)
Function SDL_GameControllerClose(gamecontroller) 'Param is a SDL_GameController pointer
Function SDL_GameControllerEventState%(state)
Function SDL_GameControllerGetAttached%(gamecontroller)	'Param is a SDL_GameController pointer
'Function SDL_GameControllerGetAxis%(gamecontroller, axis)	'gamecontroller is a SDL_GameController pointer. Returns a short integer
Function SDL_GameControllerGetAxisFromString%(pchString As Pchar)
'Function SDL_GameControllerGetBindForAxis(gamecontroller, axis) As SDL_GameControllerButtonBind	'gamecontroller is a SDL_GameController pointer. Returns by copy
'Function SDL_GameControllerGetBindForButton(gamecontroller, button) As SDL_GameControllerButtonBind	'gamecontroller is a SDL_GameController pointer. Returns by copy
'Function SDL_GameControllerGetButton%(gamecontroller, button) As SDL_GameControllerButtonBind	'gamecontroller is a SDL_GameController pointer. Returns unsigned byte
Function SDL_GameControllerGetButtonFromString%(pchString As Pchar)
Function SDL_GameControllerGetJoystick%(gamecontroller)	'gamecontroller is a SDL_GameController pointer. Returns SDL_Joystick pointer
Function SDL_GameControllerGetStringForAxis(axis) As Pchar
Function SDL_GameControllerGetStringForButton(button) As Pchar
Function SDL_GameControllerMapping(gamecontroller) As Pchar	'gamecontroller is a SDL_GameController pointer
'Function SDL_GameControllerMappingForGUID(guid As SDL_JoystickGUID) As Pchar	'Param is sent by copy
Function SDL_GameControllerName(gamecontroller) As Pchar	'gamecontroller is a SDL_GameController pointer
Function SDL_GameControllerNameForIndex(joystick_index) As Pchar
Function SDL_GameControllerOpen%(joystick_index)	'Returns a SDL_GameController pointer
Function SDL_GameControllerUpdate()
Function SDL_IsGameController%(joystick_index)

'----------------------------
' FORCE FEEDBACK
'----------------------------

'Force Feedback Support
'NOTE: haptic param is a SDL_Haptic opaque
Function SDL_HapticClose(haptic)
Function SDL_HapticDestroyEffect(haptic, effect)
'Function SDL_HapticEffectSupported%(haptic, effect As SDL_HapticEffect)
'...

'----------------------------
' AUDIO
'----------------------------

'Audio Device Management, Playing and Recording
Function SDL_AudioInit%(driver_name As Pchar)
Function SDL_AudioQuit()
'...

'----------------------------
' THREADS
'----------------------------

'Thread Management
'...

'----------------------------
' TIMERS
'----------------------------

'Timer Support
Function SDL_AddTimer%(interval, callback, param As Struct)	'callback is a function pointer
Function SDL_Delay(ms)
'Function SDL_GetPerformanceCounter%()	'Returns an unsigned long
Function SDL_GetPerformanceFrequency%()	'Returns an unsigned long
Function SDL_GetTicks%()
Function SDL_RemoveTimer%(id)
'Function SDL_TICKS_PASSED%(A, B)	'This is not a function, but a macro. Not supported yet

'----------------------------
' FILE ABSTRACTION
'----------------------------

'Filesystem Paths
Function SDL_GetBasePath() As Pchar
Function SDL_GetPrefPath(org As Pchar, app As Pchar) As Pchar

'File I/O Abstraction
'...

'----------------------------
' SHARED OBJECT SUPPORT
'----------------------------

'Shared Object Loading and Function Lookup
Function SDL_LoadFunction%(handle, name As Pchar)	'handle is a lib handle. Returns a function pointer
Function SDL_LoadObject%(sofile As Pchar)			'Returns a lib handle
Function SDL_UnloadObject(handle)					'handle is a lib handle

'----------------------------
' PLATFORM AND CPU INFORMATION
'----------------------------

'Platform Detection
Function SDL_GetPlatform() As Pchar

'CPU Feature Detection
Function SDL_GetCPUCacheLineSize%()
Function SDL_GetCPUCount%()
Function SDL_GetSystemRAM%()
Function SDL_Has3DNow%()
Function SDL_HasAVX%()
Function SDL_HasAltiVec%()
Function SDL_HasMMX%()
Function SDL_HasRDTSC%()
Function SDL_HasSSE%()
Function SDL_HasSSE2%()
Function SDL_HasSSE3%()
Function SDL_HasSSE41%()
Function SDL_HasSSE42%()

'Byte Order and Byte Swapping
'Function SDL_Swap16%(x)	'Receives and returns an unsigned short
Function SDL_Swap32%(x)
'Function SDL_Swap64%(x)		'Receives and returns an unsigned long
'Function SDL_SwapBE16%(x)	'Receives and returns an unsigned short
Function SDL_SwapBE32%(x)
'Function SDL_SwapBE64%(x)		'Receives and returns an unsigned long
Function SDL_SwapFloat%(x#)
Function SDL_SwapFloatBE%(x#)
Function SDL_SwapFloatLE%(x#)
'Function SDL_SwapLE16%(x)	'Receives and returns an unsigned short
Function SDL_SwapLE32%(x)
'Function SDL_SwapLE64%(x)		'Receives and returns an unsigned long

'Bit-level Operations
Function SDL_MostSignificantBitIndex32%(x)

'----------------------------
' POWER MANAGEMENT
'----------------------------

'Power Management Status
Function SDL_GetPowerInfo%(secs, pct)	'Args are int pointers

'----------------------------
' ADDITIONAL
'----------------------------

'Platform-specific functionality
Function SDL_AndroidGetActivity%()	'Returns a pointer
Function SDL_AndroidGetExternalStoragePath() As Pchar
Function SDL_AndroidGetExternalStorageState%()
Function SDL_AndroidGetInternalStoragePath() As Pchar
Function SDL_AndroidGetJNIEnv%()	'Returns a pointer

EndExtern
